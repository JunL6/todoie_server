{"version":3,"sources":["img/logo.svg","reducers/todoListReducer.js","reducers/index.js","actions/types.js","reducers/visibilityReducer.js","utils/const.js","reducers/groupSelectedReducer.js","reducers/groupListReducer.js","reducers/authReducer.js","actions/index.js","components/Header.js","components/auth/Login.js","config/urls.js","components/auth/Signup.js","components/LandingPage/LandingPage.js","components/SelectedGroupContext.js","components/InputBar.js","components/TodoList.js","utils/getTodoList.js","components/StatusToggle.js","components/AddGroupModal.js","components/GroupSelector/GroupSelector.js","components/MainHeader.js","components/Sidebar/Sidebar.js","components/Main.js","components/PrivateRoute.js","components/App.js","index.js","img/Todoie_logo.svg"],"names":["module","exports","INITIALSTATE_TODOLIST","id","text","timeCreated","isCompleted","groupId","rootReducer","combineReducers","todoList","action","type","payload","newTodoList","map","todo","visibility","console","log","groupSelected","currentGroupId","groupList","groupName","form","formReducer","authed","state","authUser","username","connect","props","history","location","pathname","Navbar","className","expand","to","style","color","Brand","Button","variant","mapDispatchToProps","useState","setUsername","password","setPassword","validated","setValidated","isCredentialCorrect","setIsCredentialCorrect","Container","fluid","Row","src","logo","width","height","Col","Form","noValidate","onSubmit","event","currentTarget","checkValidity","preventDefault","stopPropagation","formProps","axios","post","endpointRoot","then","response","status","JSON","parse","config","data","push","catch","err","error","Group","controlId","Label","Control","placeholder","required","onChange","e","target","value","Feedback","block","display","NavDropdown","Divider","hasUsernameExisted","setHasUsernameExisted","toString","includes","Text","LandingPage","xs","size","SelectedGroupContext","React","createContext","SelectedGroupProvider","selectedGroupId","setSelectedGroupId","Provider","children","inputBarCSS","InputBar","input","setInput","useContext","inline","todoContent","trim","createdTime","Date","setCount","prevCount","FormControl","fullList","filter","getTodoListFromSelection","list","item","key","_id","onClick","todoId","isToggled","StatusToggle","renderButton","bind","this","switchVisibility","Component","AddGroupModal","Modal","show","isModalOpen","onHide","closeModal","centered","Header","closeButton","Title","Body","InputGroup","onGroupNameInputChange","Footer","onAddNewGroup","GroupSelector","setIsModalOpen","groupNameInput","setGroupNameInput","useEffect","groups","length","ListGroup","group","Item","classNames","useHistory","bg","setIsSidebarOpen","isSidebarOpen","icon","faAlignLeft","DropdownButton","title","Dropdown","get","Sidebar","Main","userData","setUserData","count","todos","PrivateRoute","PrivateComponent","component","path","rest","App","fetchUser","Login","Signup","exact","dispatch","ReactDOM","render","store","createStore","reducer","applyMiddleware","thunk","document","getElementById"],"mappings":"mLAAAA,EAAOC,QAAU,IAA0B,kC,+NCErCC,EAAwB,CAC5B,CACEC,IAAK,EACLC,KAAM,cACNC,YAAa,cACbC,aAAa,EACbC,SAAU,GAEZ,CACEJ,IAAK,EACLC,KAAM,aACNC,YAAa,cACbC,aAAa,EACbC,SAAU,ICECC,EATKC,YAAgB,CAClCC,SDUa,WAAqD,IAA3CA,EAA0C,uDAA/BR,EAAuBS,EAAQ,uCACjE,OAAQA,EAAOC,MACb,IErBwB,eFsBtB,MAAM,GAAN,mBAAWF,GAAX,CAAqBC,EAAOE,UAC9B,IEtB2B,kBFuBzB,IAAIC,EAAcJ,EAASK,KACzB,SAACC,GAAD,OACEA,EAAKb,KAAOQ,EAAOE,QAAnB,2BACSG,GADT,IACeV,aAAcU,EAAKV,cAC9BU,KASR,OAAOF,EACT,QACE,OAAOJ,IC7BXO,WEPa,WAA2C,IAAlCA,EAAiC,uDCH/B,EDGuBN,EAAQ,uCACvD,OAAQA,EAAOC,MACb,IDH6B,oBCK3B,OADAM,QAAQC,IAAI,mBAAqBR,EAAOE,SACjCF,EAAOE,QAChB,QACE,OAAOI,IFEXG,cIPa,WAAkD,IAAzCC,EAAwC,wDAF1C,EAEkCV,EAAQ,uCAC9D,OAAQA,EAAOC,MACb,IHHwB,eGItB,OAAOD,EAAOE,QAChB,QACE,OAAOQ,IJGXC,UKVa,WASZ,IARDA,EAQA,uDARY,CACV,CAAEC,UAAW,gBAAiBhB,SAAU,GACxC,CACEgB,UAAW,UACXhB,SAAU,IAGdI,EACA,uCACA,OAAQA,EAAOC,MACb,IJTqB,YIWnB,OADAM,QAAQC,IAAI,0BACN,GAAN,mBAAWG,GAAX,CAAsBX,EAAOE,UAC/B,QACE,OAAOS,ILJXE,KAAMC,IACNC,OMZa,WAAiC,IAAvBC,EAAsB,uDAAd,KAAMhB,EAAQ,uCAC7C,OAAQA,EAAOC,MACb,ILCsB,aKCtB,ILAqB,YKCnB,OAAOD,EAAOE,UAAW,EAC3B,QACE,OAAOc,M,iBC0BN,SAASC,EAASC,GACvB,MAAO,CACLjB,KN/BqB,YMgCrBC,QAASgB,GAIN,I,wECVP,IAIeC,eAJS,SAACH,GAAD,MAAY,CAClCD,OAAQC,EAAMD,UAGDI,EA9Bf,SAAgBC,GAEd,MAAmB,MADAA,EAAMC,QAAQC,SAASC,SAGtC,kBAACC,EAAA,EAAD,CAAQC,UAAU,qBAAqBC,OAAO,MAC5C,kBAAC,gBAAD,CACEC,GAAIP,EAAML,OAAS,OAAS,IAC5Ba,MAAO,CAAEC,MAAO,UAEhB,kBAACL,EAAA,EAAOM,MAAR,CAAcL,UAAU,WAAxB,WAEF,kBAAC,gBAAD,CAAeE,GAAG,UAChB,kBAACI,EAAA,EAAD,CAAQC,QAAQ,gBAAgBP,UAAU,QAA1C,WAIF,kBAAC,gBAAD,CAAeE,GAAG,WAChB,kBAACI,EAAA,EAAD,CAAQC,QAAQ,gBAAgBP,UAAU,QAA1C,aAMI,wC,8ECmFd,IACMQ,EAAqB,CAAEhB,YACdE,eAFS,SAACH,GAAD,MAAY,CAAED,OAAQC,EAAMD,UAEZkB,EAAzBd,EAhGf,SAAeC,GAAQ,IAAD,EACYc,qBADZ,mBACbhB,EADa,KACHiB,EADG,OAEYD,qBAFZ,mBAEbE,EAFa,KAEHC,EAFG,OAGcH,oBAAS,GAHvB,mBAGbI,EAHa,KAGFC,EAHE,OAIkCL,oBAAS,GAJ3C,mBAIbM,EAJa,KAIQC,EAJR,KAkCpB,OACE,yBAAKhB,UAAU,QACb,yBAAKA,UAAU,eACf,kBAACiB,EAAA,EAAD,CAAWC,OAAK,GACd,kBAACC,EAAA,EAAD,CAAKnB,UAAU,kDACb,kBAAC,OAAD,CAAME,GAAG,IAAIF,UAAU,oCACrB,yBAAKoB,IAAKC,IAAMC,MAAM,KAAKC,OAAO,OAClC,wBAAIvB,UAAU,gCAAd,WAGJ,kBAACmB,EAAA,EAAD,CAAKnB,UAAU,+BACb,kBAACwB,EAAA,EAAD,CAAKxB,UAAU,8DACb,kBAACyB,EAAA,EAAD,CAAMC,YAAU,EAACb,UAAWA,EAAWc,SAxC5B,SAACC,IAES,IADhBA,EAAMC,cACVC,kBACPF,EAAMG,iBACNH,EAAMI,mBAGRlB,GAAa,GACbc,EAAMG,iBACN,IAAME,EAAY,CAAExC,WAAUkB,YAC9BuB,IACGC,KChCkBC,yCDgCFH,GAChBI,MAAK,SAACC,GACLxD,QAAQC,IAAIuD,GACY,MAApBA,EAASC,SACX5C,EAAMH,SAASgD,KAAKC,MAAMH,EAASI,OAAOC,MAAMlD,UAChDX,QAAQC,IAAIY,EAAML,QAClBK,EAAMC,QAAQgD,KAAK,YAGtBC,OAAM,SAACC,GACNhE,QAAQiE,MAAMD,GAEd9B,GAAuB,GACvBJ,EAAY,WAiBN,wBAAIZ,UAAU,8BAAd,UACA,kBAACyB,EAAA,EAAKuB,MAAN,CAAYC,UAAU,kBACpB,kBAACxB,EAAA,EAAKyB,MAAN,CAAYlD,UAAU,oBAAtB,SACA,kBAACyB,EAAA,EAAK0B,QAAN,CACE3E,KAAK,QACL4E,YAAY,cACZC,UAAQ,EACRC,SAAU,SAACC,GAAD,OAAO7C,EAAY6C,EAAEC,OAAOC,UAExC,kBAAChC,EAAA,EAAK0B,QAAQO,SAAd,CAAuBlF,KAAK,WAA5B,mCAIF,kBAACiD,EAAA,EAAKuB,MAAN,CAAYC,UAAU,oBAAoBjD,UAAU,QAClD,kBAACyB,EAAA,EAAKyB,MAAN,CAAYlD,UAAU,oBAAtB,YACA,kBAACyB,EAAA,EAAK0B,QAAN,CACE3E,KAAK,WACL4E,YAAY,WACZC,UAAQ,EACRC,SAAU,SAACC,GAAD,OAAO3C,EAAY2C,EAAEC,OAAOC,UAExC,kBAAChC,EAAA,EAAK0B,QAAQO,SAAd,CAAuBlF,KAAK,WAA5B,sCAKF,kBAAC8B,EAAA,EAAD,CAAQC,QAAQ,UAAU/B,KAAK,SAASmF,OAAK,GAA7C,UAGA,yBACE3D,UAAU,cACVG,MAAO,CAAEyD,QAAS7C,EAAsB,QAAU,SAFpD,iCAOF,kBAAC8C,EAAA,EAAYC,QAAb,MACA,yBAAK9D,UAAU,cAAf,8BAC6B,kBAAC,OAAD,CAAME,GAAG,WAAT,mBEwBzC,IAAMM,EAAqB,CAAEhB,YACdE,cAAQ,KAAMc,EAAdd,EA/Gf,SAAgBC,GAAQ,IAAD,EACWc,qBADX,mBACdhB,EADc,KACJiB,EADI,OAEWD,qBAFX,mBAEdE,EAFc,KAEJC,EAFI,OAI+BH,oBAAS,GAJxC,mBAIdsD,EAJc,KAIMC,EAJN,KA4CrB,OACE,yBAAKhE,UAAU,QACb,yBAAKA,UAAU,eACf,kBAACiB,EAAA,EAAD,CAAWC,OAAK,GACd,kBAACC,EAAA,EAAD,CAAKnB,UAAU,kDACb,kBAAC,OAAD,CAAME,GAAG,IAAIF,UAAU,oCACrB,yBAAKoB,IAAKC,IAAMC,MAAM,KAAKC,OAAO,OAClC,wBAAIvB,UAAU,gCAAd,WAGJ,kBAACmB,EAAA,EAAD,CAAKnB,UAAU,+BACb,kBAACwB,EAAA,EAAD,CAAKxB,UAAU,8DACb,kBAACyB,EAAA,EAAD,CAEEE,SApDZ,SAAsBC,GASpBA,EAAMG,iBAEN,IAAME,EAAY,CAAExC,WAAUkB,YAC9BuB,IACGC,KD/BmBC,0CC+BFH,GACjBI,MAAK,SAACC,GACLxD,QAAQC,IAAIuD,GACY,MAApBA,EAASC,SACX5C,EAAMH,SAASyC,EAAUxC,UACzBE,EAAMC,QAAQgD,KAAK,YAGtBC,OAAM,SAACC,GACNhE,QAAQiE,MAAMD,GACVA,EAAImB,WAAWC,SAAS,SAC1BF,GAAsB,GACtBpD,EAAY,YA6BR,wBAAIZ,UAAU,8BAAd,WACA,kBAACyB,EAAA,EAAKuB,MAAN,CAAYC,UAAU,kBACpB,kBAACxB,EAAA,EAAKyB,MAAN,CAAYlD,UAAU,oBAAtB,SACA,kBAACyB,EAAA,EAAK0B,QAAN,CACE3E,KAAK,QACL4E,YAAY,cACZC,UAAQ,EACRC,SA/BhB,SAA+BC,GAC7B7C,EAAY6C,EAAEC,OAAOC,UAgCT,kBAAChC,EAAA,EAAK0B,QAAQO,SAAd,CAAuBlF,KAAK,WAA5B,kCAGA,kBAACiD,EAAA,EAAK0C,KAAN,CAAWnE,UAAU,cAArB,mDAIF,kBAACyB,EAAA,EAAKuB,MAAN,CAAYC,UAAU,oBAAoBjD,UAAU,QAClD,kBAACyB,EAAA,EAAKyB,MAAN,CAAYlD,UAAU,oBAAtB,YACA,kBAACyB,EAAA,EAAK0B,QAAN,CACE3E,KAAK,WACL4E,YAAY,WACZC,UAAQ,EACRC,SA1ChB,SAA+BC,GAC7B3C,EAAY2C,EAAEC,OAAOC,UA2CT,kBAAChC,EAAA,EAAK0B,QAAQO,SAAd,CAAuBlF,KAAK,WAA5B,sCAKF,kBAAC8B,EAAA,EAAD,CAAQC,QAAQ,UAAU/B,KAAK,SAASmF,OAAK,GAA7C,WAGA,yBACE3D,UAAU,cACVG,MAAO,CAAEyD,QAASG,EAAqB,QAAU,SAFnD,+BAOF,kBAACF,EAAA,EAAYC,QAAb,MACA,yBAAK9D,UAAU,cAAf,4BAC2B,kBAAC,OAAD,CAAME,GAAG,UAAT,kB,cChHxB,SAASkE,EAAYzE,GAClC,OACE,kBAACsB,EAAA,EAAD,CAAWC,OAAK,EAAClB,UAAU,gBACzB,yBAAKA,UAAU,SAAf,KACA,yBAAKA,UAAU,qDACb,kBAACmB,EAAA,EAAD,CAAKnB,UAAU,mCACb,wBAAIA,UAAU,cAAd,WAEF,kBAACmB,EAAA,EAAD,CAAKnB,UAAU,8BACb,wBAAIA,UAAU,cAAd,4BAEF,kBAACmB,EAAA,EAAD,CAAKnB,UAAU,mCACb,kBAACwB,EAAA,EAAD,CAAK6C,GAAG,QACN,kBAAC,gBAAD,CAAenE,GAAG,WAChB,kBAACI,EAAA,EAAD,CAAQC,QAAQ,UAAU+D,KAAK,MAA/B,qB,aClBDC,EAAuBC,IAAMC,gBAE7BC,EAAwB,SAAC/E,GAAW,IAAD,EACAc,qBADA,mBACvCkE,EADuC,KACtBC,EADsB,KAG9C,OACE,kBAACL,EAAqBM,SAAtB,CACEpB,MAAO,CAACkB,EAAiBC,IAExBjF,EAAMmF,WCNPC,EAAc,CAAEzD,MAAO,QA+Dd0D,MA7Df,SAAkBrF,GAAO,MASGc,mBAAS,IATZ,mBAShBwE,EATgB,KASTC,EATS,OAUuBC,qBAC5CZ,GAXqB,mBAUhBI,EAVgB,KA6CvB,OA7CuB,KA8CrB,kBAAClD,EAAA,EAAD,CAAM2D,QAAM,EAACzD,SA5Bf,SAAkB4B,GAChBA,EAAExB,iBACF,IAakBsD,EAbdrH,EAAOiH,EAAMK,OACZtH,IAYaqH,EAPPrH,EAQXkE,IACGC,KAAK,kBAAmB,CACvBhE,QAASwG,EACTU,cACAE,YAAa,IAAIC,OAElBnD,MAAK,WACJ1C,EAAM8F,UAAS,SAACC,GAAD,OAAeA,EAAY,QAZ9CR,EAAS,IACTpG,QAAQC,IAAI,cAAgBf,KAgBKgC,UAAU,QACzC,kBAAC2F,EAAA,EAAD,CACEnH,KAAK,OACLiF,MAAOwB,EACP3B,SApCN,SAAuBC,GACrB2B,EAAS3B,EAAEC,OAAOC,QAoCdzD,UAAU,mBACVG,MAAO4E,IAET,kBAACzE,EAAA,EAAD,CAAQC,QAAQ,UAAU/B,KAAK,UAA/B,cCmCSkB,mBAPf,SAAyBH,GACvB,MAAO,CACLV,WAAYU,EAAMV,cAKPa,EAvFf,SAAkBC,GAAQ,IAAD,EACuBwF,qBAC5CZ,GAFqB,mBAChBI,EADgB,KAkCvB,OAlCuB,KAmCrB,yBAAK3E,UAAU,aACb,4BC3CS,SACb4F,EACA/G,EACAI,GAEA,OAAQJ,GACN,KbRsB,EaSpB,OAAO+G,EAASC,QAAO,SAACjH,GAAD,OAAUA,EAAKT,UAAYc,KACpD,KbTuB,EaUrB,OAAO2G,EAASC,QACd,SAACjH,GAAD,OAAUA,EAAKT,UAAYc,IAAuC,IAArBL,EAAKV,eAEtD,KbZuB,EaarB,OAAO0H,EAASC,QACd,SAACjH,GAAD,OAAUA,EAAKT,UAAYc,IAAuC,IAArBL,EAAKV,gBD+BhD4H,CAEEnG,EAAMoG,KACNpG,EAAMd,WACN8F,GAzBIhG,KAAI,SAACqH,GAAD,OACd,wBACEC,IAAKD,EAAKE,IACVlG,UACEgG,EAAK9H,YACD,0BACA,2BAENiI,QAAS,WApBf,IAA0BC,IAqBDJ,EAAKE,IApB5BhE,IACGC,KLTwBC,8CKSF,CACrBgE,SACAC,WAAW,IAEZhE,MAAK,SAACC,GACL3C,EAAM8F,UAAS,SAACC,GAAD,OAAeA,EAAY,UAiBzCM,EAAKX,qB,QEjCRiB,E,kDACJ,WAAY3G,GAAQ,IAAD,8BACjB,cAAMA,IACD4G,aAAe,EAAKA,aAAaC,KAAlB,gBAFH,E,yDAKNxI,EAAMuE,GAAS,IAAD,OACzB,OACE,4BACEvC,UACEyG,KAAK9G,MAAMd,aAAe0D,EACtB,iCACA,GAEN4D,QAAS,kBAAM,EAAKxG,MAAM+G,iBAAiBnE,KAE1CvE,K,+BAML,OACE,yBAAKgC,UAAU,iBACZyG,KAAKF,aAAa,Md7BD,Gc8BjBE,KAAKF,aAAa,Od7BA,Gc8BlBE,KAAKF,aAAa,Od7BA,Q,GcGAI,aAsCZjH,mBANf,SAAyBH,GACvB,MAAO,CACLV,WAAYU,EAAMV,cAIkB,CAAE6H,iBVmBV,SAAC7H,GAC/B,MAAO,CAAEL,KN7DsB,oBM6DGC,QAASI,KUpB9Ba,CAA+C4G,G,4CCxC/C,SAASM,GAAcjH,GACpC,OACE,kBAACkH,EAAA,EAAD,CAAOC,KAAMnH,EAAMoH,YAAaC,OAAQrH,EAAMsH,WAAYC,UAAQ,GAChE,kBAACL,EAAA,EAAMM,OAAP,CAAcC,aAAW,GACvB,kBAACP,EAAA,EAAMQ,MAAP,mBAEF,kBAACR,EAAA,EAAMS,KAAP,KACE,kBAACC,GAAA,EAAD,KACE,kBAAC5B,EAAA,EAAD,CACEvC,YAAY,iBACZE,SAAU3D,EAAM6H,2BAItB,kBAACX,EAAA,EAAMY,OAAP,KACE,kBAACnH,EAAA,EAAD,CAAQC,QAAQ,YAAY4F,QAASxG,EAAMsH,YAA3C,SAGA,kBAAC3G,EAAA,EAAD,CAAQC,QAAQ,UAAU4F,QAASxG,EAAM+H,eAAzC,S,OCRO,SAASC,GAAchI,GAAQ,IAoDnBT,EAAWD,EApDO,EACLwB,oBAAS,GADJ,mBACpCsG,EADoC,KACvBa,EADuB,OAECnH,mBAAS,IAFV,mBAEpCoH,EAFoC,KAEpBC,EAFoB,OAGG3C,qBAC5CZ,GAJyC,mBAGpCI,EAHoC,KAGnBC,EAHmB,OAQnBnE,oBAAS,GARU,6BAwB3C,SAASwG,IACPW,GAAe,GA8CjB,OAzDAG,qBAAU,YACHpD,GAAmBhF,EAAMqI,OAAOC,OAAS,GAC5CrD,EAAmBjF,EAAMqI,OAAO,GAAG9B,OAEpC,CAACvB,EAAiBhF,EAAMqI,SAsDzB,yBAAKhI,UAAU,uBACb,wBAAIA,UAAU,aAAd,UACA,kBAACkI,EAAA,EAAD,CAAWlI,UAAU,SAtBAd,EAuBFS,EAAMqI,OAvBO/I,EAuBC0F,EAtB5BzF,EAAUP,KAAI,SAACwJ,GACpB,OACE,kBAACD,EAAA,EAAUE,KAAX,CACEnC,IAAKkC,EAAMjC,IACXlG,UAAWqI,IAAW,OAAQ,CAC5B,gBAAiBF,EAAMjC,MAAQjH,EAC/B,aAAckJ,EAAMjC,MAAQjH,IAE9BkH,QAAS,WACPvB,EAAmBuD,EAAMjC,OAG3B,8BAAOiC,EAAMhJ,iBAYjB,kBAACgC,EAAA,EAAD,CAAKnB,UAAU,0BACb,kBAACM,EAAA,EAAD,CACEC,QAAQ,YACR+D,KAAK,KACLtE,UAAU,OACVmG,QA9DR,WACEyB,GAAe,KAyDX,cAUF,kBAAChB,GAAD,CACEG,YAAaA,EACbE,WAAYA,EACZO,uBA/DN,SAAgCjE,GAC9B,GAAIA,EAAEC,OAAOC,MAAO,CAClB,IAAMzF,EAAOuF,EAAEC,OAAOC,MAAM6B,OAC5BwC,EAAkB9J,KA6DhB0J,cAzDN,SAAuBnE,GACrBA,EAAExB,iBACFG,IACGC,KT3CsBC,4CS2CF,CACnBjD,UAAW0I,EACX5J,YAAa,IAAIuH,OAElBnD,MAAK,SAACC,GACLxD,QAAQC,IAAIuD,GACZsC,EAAmBtC,EAASK,KAAKuD,KACjCvG,EAAM8F,UAAS,SAACC,GAAD,OAAeA,EAAY,QAG9CuB,IACAa,EAAkB,Q,2CCftB,IAIepI,gBAJS,SAACH,GAAD,MAAY,CAClCD,OAAQC,EAAMD,UAGDI,EAzCf,SAAoBC,GAElB,IAAIC,EAAU0I,cAcd,OACE,kBAACvI,EAAA,EAAD,CAAQwI,GAAG,QACT,kBAAC,gBAAD,CACErI,GAAIP,EAAML,OAAS,OAAS,IAC5Ba,MAAO,CAAEC,MAAO,UAEhB,kBAACL,EAAA,EAAOM,MAAR,gBAEF,kBAACC,EAAA,EAAD,CAAQC,QAAQ,oBAAoB4F,QAnBxC,WACExG,EAAM6I,kBAAkB7I,EAAM8I,iBAmB1B,kBAAC,KAAD,CAAiBC,KAAMC,QAEzB,kBAACC,GAAA,EAAD,CACE5I,UAAU,UACV6I,MAAOlJ,EAAML,OACbiB,QAAQ,aACN,kBAACuI,GAAA,EAASV,KAAV,CAAgBjC,QAtBxB,WACEjE,IAAM6G,IVhBgB3G,2CUiBrBC,MAAK,WACJzC,EAAQgD,KAAK,UAmBT,gB,OCrCK,SAASoG,GAAQrJ,GAC9B,OACE,yBACE4I,GAAG,OACHvI,UAAWqI,IAAW,UAAW,CAC/B,UAAW1I,EAAM8I,iBAGlB9I,EAAMmF,UCCE,SAASmE,GAAKtJ,GAAQ,IAAD,EACFc,mBAAS,MADP,mBAC3ByI,EAD2B,KACjBC,EADiB,OAIR1I,mBAAS,GAJD,mBAI3B2I,EAJ2B,KAIpB3D,EAJoB,OAKQhF,oBAAS,GALjB,mBAK3BgI,EAL2B,KAKZD,EALY,KAalC,OANAT,qBAAU,WACR7F,IAAM6G,IZfqB3G,gDYeAC,MAAK,SAACC,GAC/B6G,EAAY7G,EAASK,WAEtB,CAACyG,IAGF,kBAACnI,EAAA,EAAD,CAAWC,OAAK,EAAClB,UAAU,MAAMG,MAAO,CAAEoB,OAAQ,UAChD,kBAAC,GAAD,CACEkH,cAAeA,EACfD,iBAAkBA,IAEpB,kBAAC,EAAD,KACE,yBAAKxI,UAAU,cACZlB,QAAQC,IAAImK,EAAWA,EAASG,MAAQ,IACxCvK,QAAQC,IAAIqK,GACb,kBAAC,GAAD,CAASX,cAAeA,GACtB,kBAAC,GAAD,CACET,OAAQkB,EAAWA,EAASlB,OAAS,GACrCvC,SAAUA,KAGd,yBAAKzF,UAAU,eACb,kBAAC,EAAD,CAAUyF,SAAUA,IACpB,kBAAC,EAAD,MACA,kBAAC,EAAD,CACEM,KAAMmD,EAAWA,EAASG,MAAQ,GAClC5D,SAAUA,Q,qBC3ClB6D,G,uKACM,IAAD,EACgD7C,KAAK9G,MAAzC4J,EADZ,EACCC,UAA6BC,EAD9B,EAC8BA,KAASC,EADvC,qCAEP,OACE,kBAAC,IAAD,eAAOD,KAAMA,GAAUC,GACpBjD,KAAK9G,MAAML,OAAS,kBAACiK,EAAD,MAAuB,kBAAC,IAAD,CAAUrJ,GAAG,gB,GALtCsE,IAAMmC,WAYlBjH,gBADS,SAACH,GAAD,MAAY,CAAED,OAAQC,EAAMD,UACrCI,CAAyB4J,ICHlCK,G,kLAEFlD,KAAK9G,MAAMiK,c,+BAIX,OACE,6BACE,kBAAC,IAAD,CAAOJ,UAAWrC,IAClB,kBAAC,IAAD,CAAOsC,KAAK,SAASD,UAAWK,IAChC,kBAAC,IAAD,CAAOJ,KAAK,UAAUD,UAAWM,IACjC,kBAAC,IAAD,CAAOL,KAAK,IAAIM,OAAK,EAACP,UAAWpF,IACjC,kBAAC,GAAD,CAAcqF,KAAK,OAAOD,UAAWP,U,GAZ3BzE,IAAMmC,WAkBlBnG,GAAqB,CAAEoJ,UjBXtB,WACL,OAAO,SAACI,GACN9H,IACG6G,IGrBuB3G,iDHsBvBC,MAAK,SAACC,GACLxD,QAAQC,IAAIuD,GACZ0H,EAAS,CAAExL,KNrBO,aMqBWC,QAAS6D,EAASK,KAAKlD,cAKrDoD,OAAM,SAACC,GAAD,OAAShE,QAAQiE,MAAMD,SiBErBpD,eAAQ,KAAMc,GAAdd,CAAkCiK,ICbjDM,IAASC,OACP,kBAAC,IAAD,CAAUC,MAAOC,YAAYC,EAASC,YAAgBC,OACpD,kBAAC,aAAD,KACE,kBAAC,GAAD,QAGJC,SAASC,eAAe,U,mBC1B1B7M,EAAOC,QAAU,IAA0B,0C","file":"static/js/main.e7b8c2fb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.183dc3a6.svg\";","import { ADD_TODOITEM, TOGGLE_TODOITEM } from \"../actions/types\";\n\nconst INITIALSTATE_TODOLIST = [\n  {\n    id: -1,\n    text: \"drink water\",\n    timeCreated: 1584135899914,\n    isCompleted: false,\n    groupId: -1,\n  },\n  {\n    id: -2,\n    text: \"wash hands\",\n    timeCreated: 1584135992855,\n    isCompleted: true,\n    groupId: -2,\n  },\n];\n\nexport default function (todoList = INITIALSTATE_TODOLIST, action) {\n  switch (action.type) {\n    case ADD_TODOITEM:\n      return [...todoList, action.payload];\n    case TOGGLE_TODOITEM:\n      let newTodoList = todoList.map(\n        (todo) =>\n          todo.id === action.payload\n            ? { ...todo, isCompleted: !todo.isCompleted }\n            : todo\n        /**  以上是更好的写法 \n        // if (todo.id === action.payload) {\n        //   return {...todo, isComplete = !todo.isComplete}\n        // } else {\n        //   return todo\n        // }\n         */\n      );\n      return newTodoList;\n    default:\n      return todoList;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport { reducer as formReducer } from \"redux-form\";\nimport todoListReducer from \"./todoListReducer\";\nimport visibilityReducer from \"./visibilityReducer\";\nimport groupSelectedReducer from \"./groupSelectedReducer\";\nimport groupListReducer from \"./groupListReducer\";\nimport authReducer from \"./authReducer\";\n\nconst rootReducer = combineReducers({\n  todoList: todoListReducer,\n  visibility: visibilityReducer,\n  groupSelected: groupSelectedReducer,\n  groupList: groupListReducer,\n  form: formReducer,\n  authed: authReducer,\n});\n\nexport default rootReducer;\n","export const ADD_TODOITEM = \"add_todoItem\";\nexport const TOGGLE_TODOITEM = \"toggle_todoItem\";\nexport const SWITCH_VISIBILITY = \"switch_visibility\";\nexport const SELECT_GROUP = \"select_group\";\nexport const ADD_GROUP = \"add_group\";\nexport const FETCH_USER = \"fetch_user\";\nexport const AUTH_USER = \"auth_user\";\n","import { STATUS_ALL } from \"../utils/const\";\nimport { SWITCH_VISIBILITY } from \"../actions/types\";\n\nexport default function(visibility = STATUS_ALL, action) {\n  switch (action.type) {\n    case SWITCH_VISIBILITY:\n      console.log(\"clicked toggle: \" + action.payload);\n      return action.payload;\n    default:\n      return visibility;\n  }\n}\n","export const STATUS_ALL = 0;\nexport const STATUS_TODO = 1;\nexport const STATUS_DONE = 2;\n","import { SELECT_GROUP } from \"../actions/types\";\n\nconst INITIAL_GROUP = -1;\n\nexport default function(currentGroupId = INITIAL_GROUP, action) {\n  switch (action.type) {\n    case SELECT_GROUP:\n      return action.payload;\n    default:\n      return currentGroupId;\n  }\n}\n","import { ADD_GROUP } from \"../actions/types\";\n\nexport default function(\n  groupList = [\n    { groupName: \"Default Group\", groupId: -1 },\n    {\n      groupName: \"Group 2\",\n      groupId: -2\n    }\n  ],\n  action\n) {\n  switch (action.type) {\n    case ADD_GROUP:\n      console.log(\"here is being executed\");\n      return [...groupList, action.payload];\n    default:\n      return groupList;\n  }\n}\n","import { FETCH_USER, AUTH_USER } from \"../actions/types\";\n\nexport default function (state = null, action) {\n  switch (action.type) {\n    case FETCH_USER:\n      return action.payload || false;\n    case AUTH_USER:\n      return action.payload || false;\n    default:\n      return state;\n  }\n}\n","import axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\n\nimport {\n  ADD_TODOITEM,\n  TOGGLE_TODOITEM,\n  SWITCH_VISIBILITY,\n  SELECT_GROUP,\n  ADD_GROUP,\n  FETCH_USER,\n  AUTH_USER,\n} from \"./types\";\nimport { URL_FETCH_USER } from \"../config/urls\";\n\nlet nextTodoId = 0;\nlet nextGroupId = 1;\n\n// 暂时先注释掉，因为hook只能用在function component里\n// let history = useHistory();\n\nexport function fetchUser() {\n  return (dispatch) => {\n    axios\n      .get(URL_FETCH_USER)\n      .then((response) => {\n        console.log(response);\n        dispatch({ type: FETCH_USER, payload: response.data.username });\n\n        // 暂时先注释掉，因为hook只能用在function component里\n        // history.push(\"/app\");\n      })\n      .catch((err) => console.error(err));\n  };\n}\n\nexport function authUser(username) {\n  return {\n    type: AUTH_USER,\n    payload: username,\n  };\n}\n\nexport const addTodoItem = (text, timestamp, currentGroupId) => {\n  return {\n    type: ADD_TODOITEM,\n    payload: {\n      id: nextTodoId++,\n      text,\n      timeCreated: timestamp,\n      isCompleted: false,\n      groupId: currentGroupId,\n    },\n  };\n};\n\nexport const toggleTodoItem = (id) => {\n  return {\n    type: TOGGLE_TODOITEM,\n    payload: id,\n  };\n};\n\nexport const switchVisibility = (visibility) => {\n  return { type: SWITCH_VISIBILITY, payload: visibility };\n};\n\nexport const selectGroup = (groupId) => {\n  return {\n    type: SELECT_GROUP,\n    payload: groupId,\n  };\n};\n\nexport const addGroup = (groupName) => {\n  return {\n    type: ADD_GROUP,\n    payload: {\n      groupName,\n      groupId: nextGroupId++,\n    },\n  };\n};\n\n/* authentication related */\n","import React from \"react\";\nimport { Navbar, Button } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { connect } from \"react-redux\";\nimport \"./Header.css\";\n\nfunction Header(props) {\n  const currentURL = props.history.location.pathname;\n  if (currentURL === \"/\")\n    return (\n      <Navbar className=\"header transparent\" expand=\"lg\">\n        <LinkContainer\n          to={props.authed ? \"/app\" : \"/\"}\n          style={{ color: \"white\" }}\n        >\n          <Navbar.Brand className=\"mr-auto\">Todoie</Navbar.Brand>\n        </LinkContainer>\n        <LinkContainer to=\"/login\">\n          <Button variant=\"outline-light\" className=\"mr-2\">\n            Log in\n          </Button>\n        </LinkContainer>\n        <LinkContainer to=\"/signup\">\n          <Button variant=\"outline-light\" className=\"mr-2\">\n            Sign up\n          </Button>\n        </LinkContainer>\n      </Navbar>\n    );\n  else return <></>;\n}\n\nconst mapStateToProps = (state) => ({\n  authed: state.authed,\n});\n\nexport default connect(mapStateToProps)(Header);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Form,\n  Button,\n  Container,\n  Row,\n  Col,\n  NavDropdown,\n} from \"react-bootstrap\";\n\nimport { URL_LOGIN } from \"../../config/urls\";\nimport { authUser } from \"../../actions\";\nimport \"./auth.css\";\nimport logo from \"../../img/Todoie_logo.svg\";\n\nfunction Login(props) {\n  const [username, setUsername] = useState();\n  const [password, setPassword] = useState();\n  const [validated, setValidated] = useState(false);\n  const [isCredentialCorrect, setIsCredentialCorrect] = useState(false);\n\n  const handleSubmit = (event) => {\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    setValidated(true);\n    event.preventDefault();\n    const formProps = { username, password };\n    axios\n      .post(URL_LOGIN, formProps)\n      .then((response) => {\n        console.log(response);\n        if (response.status === 200) {\n          props.authUser(JSON.parse(response.config.data).username);\n          console.log(props.authed);\n          props.history.push(\"/app\");\n        }\n      })\n      .catch((err) => {\n        console.error(err);\n\n        setIsCredentialCorrect(true);\n        setPassword(null);\n      });\n  };\n\n  return (\n    <div className=\"auth\">\n      <div className=\"background\"></div>\n      <Container fluid>\n        <Row className=\"pt-5 justify-content-center align-items-center\">\n          <Link to=\"/\" className=\"d-flex align-items-end logo-link\">\n            <img src={logo} width=\"30\" height=\"30\" />\n            <h3 className=\"d-inline-block m-0 text-dark\">odoie</h3>\n          </Link>\n        </Row>\n        <Row className=\"my-4 justify-content-center\">\n          <Col className=\"auth-form-container pt-3 pb-4 px-4 border rounded bg-light\">\n            <Form noValidate validated={validated} onSubmit={handleSubmit}>\n              <h3 className=\"text-center text-secondary\">Log in</h3>\n              <Form.Group controlId=\"formBasicEmail\">\n                <Form.Label className=\"font-weight-bold\">Email</Form.Label>\n                <Form.Control\n                  type=\"email\"\n                  placeholder=\"Enter email\"\n                  required\n                  onChange={(e) => setUsername(e.target.value)}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  Please provide a proper Email.\n                </Form.Control.Feedback>\n              </Form.Group>\n              <Form.Group controlId=\"formBasicPassword\" className=\"mb-4\">\n                <Form.Label className=\"font-weight-bold\">Password</Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  required\n                  onChange={(e) => setPassword(e.target.value)}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  Please provide a proper password.\n                </Form.Control.Feedback>\n              </Form.Group>\n\n              <Button variant=\"primary\" type=\"submit\" block>\n                Log in\n              </Button>\n              <div\n                className=\"text-danger\"\n                style={{ display: isCredentialCorrect ? \"block\" : \"none\" }}\n              >\n                Invalid username or password\n              </div>\n            </Form>\n            <NavDropdown.Divider />\n            <div className=\"text-muted\">\n              Don't have an account yet? <Link to=\"/signup\">Sign up</Link>\n            </div>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({ authed: state.authed });\nconst mapDispatchToProps = { authUser };\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","const endpointRoot = \"https://todoie.herokuapp.com\";\n// const endpointRoot = \"\";\nexport const URL_FETCH_USER = endpointRoot + \"/api/current_user\";\nexport const URL_LOGIN = endpointRoot + \"/api/login\";\nexport const URL_LOGOUT = endpointRoot + \"/api/logout\";\nexport const URL_SIGNUP = endpointRoot + \"/api/signup\";\nexport const URL_GETUSERDATA = endpointRoot + \"/api/getUserData\";\nexport const URL_UPDATE_TODO = endpointRoot + \"/api/updateTodo\";\nexport const URL_ADD_GROUP = endpointRoot + \"/api/addGroup\";\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Form,\n  Button,\n  Container,\n  Row,\n  Col,\n  NavDropdown,\n} from \"react-bootstrap\";\n\nimport { URL_SIGNUP } from \"../../config/urls\";\nimport { authUser } from \"../../actions\";\nimport logo from \"../../img/Todoie_logo.svg\";\n\nfunction Signup(props) {\n  const [username, setUsername] = useState();\n  const [password, setPassword] = useState();\n  // const [validated, setValidated] = useState(false);\n  const [hasUsernameExisted, setHasUsernameExisted] = useState(false);\n\n  function handleSubmit(event) {\n    // const form = event.currentTarget;\n    // if (form.checkValidity() === false) {\n    //   event.preventDefault();\n    //   event.stopPropagation();\n    // }\n\n    // setValidated(true);\n\n    event.preventDefault();\n\n    const formProps = { username, password };\n    axios\n      .post(URL_SIGNUP, formProps)\n      .then((response) => {\n        console.log(response);\n        if (response.status === 200) {\n          props.authUser(formProps.username);\n          props.history.push(\"/app\");\n        }\n      })\n      .catch((err) => {\n        console.error(err);\n        if (err.toString().includes(\"409\")) {\n          setHasUsernameExisted(true);\n          setPassword(null);\n        }\n      });\n  }\n\n  function onUsernameInputChange(e) {\n    setUsername(e.target.value);\n  }\n\n  function onPasswordInputChange(e) {\n    setPassword(e.target.value);\n  }\n\n  return (\n    <div className=\"auth\">\n      <div className=\"background\"></div>\n      <Container fluid>\n        <Row className=\"pt-5 justify-content-center align-items-center\">\n          <Link to=\"/\" className=\"d-flex align-items-end logo-link\">\n            <img src={logo} width=\"30\" height=\"30\" />\n            <h3 className=\"d-inline-block m-0 text-dark\">odoie</h3>\n          </Link>\n        </Row>\n        <Row className=\"my-4 justify-content-center\">\n          <Col className=\"auth-form-container pt-3 pb-4 px-4 border rounded bg-light\">\n            <Form\n              //  validated={validated}\n              onSubmit={handleSubmit}\n            >\n              <h3 className=\"text-center text-secondary\">Sign up</h3>\n              <Form.Group controlId=\"formBasicEmail\">\n                <Form.Label className=\"font-weight-bold\">Email</Form.Label>\n                <Form.Control\n                  type=\"email\"\n                  placeholder=\"Enter email\"\n                  required\n                  onChange={onUsernameInputChange}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  Please provide a proper Email.\n                </Form.Control.Feedback>\n                <Form.Text className=\"text-muted\">\n                  We'll never share your email with anyone else.\n                </Form.Text>\n              </Form.Group>\n              <Form.Group controlId=\"formBasicPassword\" className=\"mb-4\">\n                <Form.Label className=\"font-weight-bold\">Password</Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  required\n                  onChange={onPasswordInputChange}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  Please provide a proper password.\n                </Form.Control.Feedback>\n              </Form.Group>\n\n              <Button variant=\"primary\" type=\"submit\" block>\n                Sign up\n              </Button>\n              <div\n                className=\"text-danger\"\n                style={{ display: hasUsernameExisted ? \"block\" : \"none\" }}\n              >\n                Email has been registered.\n              </div>\n            </Form>\n            <NavDropdown.Divider />\n            <div className=\"text-muted\">\n              Already have an account? <Link to=\"/login\">Log in</Link>\n            </div>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nconst mapDispatchToProps = { authUser };\nexport default connect(null, mapDispatchToProps)(Signup);\n\n// export default reduxForm({ form: \"signup\" })(connectedComponent);\n","import React from \"react\";\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport logo from \"../../img/logo.svg\";\nimport \"./LandingPage.css\";\n\nexport default function LandingPage(props) {\n  return (\n    <Container fluid className=\"landing-page\">\n      <div className=\"layer\"> </div>\n      <div className=\"content d-flex flex-column justify-content-center\">\n        <Row className=\"justify-content-center py-3 m-0\">\n          <h1 className=\"text-light\">Todoie</h1>\n        </Row>\n        <Row className=\"justify-content-center m-0\">\n          <h4 className=\"text-light\">A simple todo list app.</h4>\n        </Row>\n        <Row className=\"justify-content-center pt-3 m-0\">\n          <Col xs=\"auto\">\n            <LinkContainer to=\"/signup\">\n              <Button variant=\"primary\" size=\"lg\">\n                Get Started!\n              </Button>\n            </LinkContainer>\n          </Col>\n        </Row>\n      </div>\n    </Container>\n  );\n}\n","import React, { useState } from \"react\";\n\nexport const SelectedGroupContext = React.createContext();\n\nexport const SelectedGroupProvider = (props) => {\n  const [selectedGroupId, setSelectedGroupId] = useState();\n\n  return (\n    <SelectedGroupContext.Provider\n      value={[selectedGroupId, setSelectedGroupId]}\n    >\n      {props.children}\n    </SelectedGroupContext.Provider>\n  );\n};\n","import React, { useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport { InputGroup, FormControl, Button, Form, Row } from \"react-bootstrap\";\nimport { SelectedGroupContext } from \"./SelectedGroupContext\";\n\nconst inputBarCSS = { width: \"10px\" };\n\nfunction InputBar(props) {\n  // constructor(props) {\n  //   super(props);\n  //   this.state = { text: \"\" };\n\n  //   this.onInputChange = this.onInputChange.bind(this);\n  //   this.onSubmit = this.onSubmit.bind(this);\n  // }\n\n  const [input, setInput] = useState(\"\");\n  const [selectedGroupId, setSelectedGroupId] = useContext(\n    SelectedGroupContext\n  );\n\n  function onInputChange(e) {\n    setInput(e.target.value);\n  }\n\n  function onSubmit(e) {\n    e.preventDefault();\n    let text = input.trim();\n    if (!text) {\n      return;\n    }\n\n    // api part\n    insertTodo(text);\n\n    // empty input bar text\n    setInput(\"\");\n    console.log(\"add to do: \" + text);\n  }\n\n  function insertTodo(todoContent) {\n    axios\n      .post(\"/api/insertTodo\", {\n        groupId: selectedGroupId,\n        todoContent,\n        createdTime: new Date(),\n      })\n      .then(() => {\n        props.setCount((prevCount) => prevCount + 1);\n      });\n  }\n\n  return (\n    <Form inline onSubmit={onSubmit} className=\"mb-3\">\n      <FormControl\n        type=\"text\"\n        value={input}\n        onChange={onInputChange}\n        className=\"mr-2 flex-grow-1\"\n        style={inputBarCSS}\n      />\n      <Button variant=\"primary\" type=\"submit\">\n        Add Todo\n      </Button>\n    </Form>\n  );\n}\n\nexport default InputBar;\n","import React, { useContext } from \"react\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport { Nav, Card, Button } from \"react-bootstrap\";\n// import { toggleTodoItem } from \"../actions\";\nimport { SelectedGroupContext } from \"./SelectedGroupContext\";\nimport { URL_UPDATE_TODO } from \"../config/urls\";\nimport getTodoListFromSelection from \"../utils/getTodoList\";\n\nfunction TodoList(props) {\n  const [selectedGroupId, setSelectedGroupId] = useContext(\n    SelectedGroupContext\n  );\n\n  function OnToggleTodoItem(todoId) {\n    axios\n      .post(URL_UPDATE_TODO, {\n        todoId,\n        isToggled: true,\n      })\n      .then((response) => {\n        props.setCount((prevCount) => prevCount + 1);\n      });\n  }\n\n  function renderList(list) {\n    return list.map((item) => (\n      <li\n        key={item._id}\n        className={\n          item.isCompleted\n            ? \"todo-list_li--completed\"\n            : \"todo-list_li--incomplete\"\n        }\n        onClick={() => {\n          OnToggleTodoItem(item._id);\n        }}\n      >\n        {item.todoContent}\n      </li>\n    ));\n  }\n\n  return (\n    <div className=\"todo-list\">\n      <ul>\n        {renderList(\n          getTodoListFromSelection(\n            // this.props.todoList,\n            props.list,\n            props.visibility,\n            selectedGroupId\n          )\n        )}\n      </ul>\n\n      {/* <Card>\n        <Card.Header>\n          <Nav variant=\"pills\" defaultActiveKey=\"#first\">\n            <Nav.Item>\n              <Nav.Link href=\"#first\">Active</Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link href=\"#link\">Link</Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link href=\"#disabled\" disabled>\n                Disabled\n              </Nav.Link>\n            </Nav.Item>\n          </Nav>\n        </Card.Header>\n        <Card.Body className=\"p-0\">\n          <ul>\n            {renderList(\n              getTodoListFromSelection(\n                // this.props.todoList,\n                props.list,\n                props.visibility,\n                selectedGroupId\n              )\n            )}\n          </ul>\n        </Card.Body>\n      </Card> */}\n    </div>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    visibility: state.visibility,\n  };\n}\n\n// export default connect(mapStateToProps, mapDispatchToProps)(TodoList);\nexport default connect(mapStateToProps)(TodoList);\n","import { STATUS_ALL, STATUS_TODO, STATUS_DONE } from \"./const\";\n\nexport default function getTodoListFromSelection(\n  fullList,\n  visibility,\n  currentGroupId\n) {\n  switch (visibility) {\n    case STATUS_ALL:\n      return fullList.filter((todo) => todo.groupId === currentGroupId);\n    case STATUS_TODO:\n      return fullList.filter(\n        (todo) => todo.groupId === currentGroupId && todo.isCompleted === false\n      );\n    case STATUS_DONE:\n      return fullList.filter(\n        (todo) => todo.groupId === currentGroupId && todo.isCompleted === true\n      );\n  }\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { switchVisibility } from \"../actions\";\nimport { STATUS_ALL, STATUS_TODO, STATUS_DONE } from \"../utils/const\";\n\nclass StatusToggle extends Component {\n  constructor(props) {\n    super(props);\n    this.renderButton = this.renderButton.bind(this);\n  }\n\n  renderButton(text, status) {\n    return (\n      <button\n        className={\n          this.props.visibility === status\n            ? \"status-toggle_button--selected\"\n            : \"\"\n        }\n        onClick={() => this.props.switchVisibility(status)}\n      >\n        {text}\n      </button>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"status-toggle\">\n        {this.renderButton(\"All\", STATUS_ALL)}\n        {this.renderButton(\"Todo\", STATUS_TODO)}\n        {this.renderButton(\"Done\", STATUS_DONE)}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    visibility: state.visibility,\n  };\n}\n\nexport default connect(mapStateToProps, { switchVisibility })(StatusToggle);\n","import React from \"react\";\nimport { Modal, Button, InputGroup, FormControl } from \"react-bootstrap\";\n\nexport default function AddGroupModal(props) {\n  return (\n    <Modal show={props.isModalOpen} onHide={props.closeModal} centered>\n      <Modal.Header closeButton>\n        <Modal.Title>New group</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <InputGroup>\n          <FormControl\n            placeholder=\"New group name\"\n            onChange={props.onGroupNameInputChange}\n          />\n        </InputGroup>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={props.closeModal}>\n          Close\n        </Button>\n        <Button variant=\"primary\" onClick={props.onAddNewGroup}>\n          Add\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n","import React, { useState, useContext, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { ListGroup, Button, Row, Modal } from \"react-bootstrap\";\nimport classNames from \"classnames\";\n\n// import { selectGroup, addGroup } from \"../actions\";\nimport { SelectedGroupContext } from \"../SelectedGroupContext\";\nimport AddGroupModal from \"../AddGroupModal\";\nimport { URL_ADD_GROUP } from \"../../config/urls\";\nimport \"./GroupSelector.css\";\n// import Modal from \"react-modal\";\n// Modal.setAppElement(\"#root\");\n\nexport default function GroupSelector(props) {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [groupNameInput, setGroupNameInput] = useState(\"\");\n  const [selectedGroupId, setSelectedGroupId] = useContext(\n    SelectedGroupContext\n  );\n\n  /* */\n  const [show, setShow] = useState(false);\n\n  // const handleClose = () => setShow(false);\n  // const handleShow = () => setShow(true);\n\n  /* I am not sure if I should move this useEffect logic to Main.js */\n  useEffect(() => {\n    if (!selectedGroupId && props.groups.length > 0) {\n      setSelectedGroupId(props.groups[0]._id);\n    }\n  }, [selectedGroupId, props.groups]);\n\n  function openModal() {\n    setIsModalOpen(true);\n  }\n\n  function closeModal() {\n    setIsModalOpen(false);\n  }\n\n  function onGroupNameInputChange(e) {\n    if (e.target.value) {\n      const text = e.target.value.trim();\n      setGroupNameInput(text);\n    }\n  }\n\n  function onAddNewGroup(e) {\n    e.preventDefault();\n    axios\n      .post(URL_ADD_GROUP, {\n        groupName: groupNameInput,\n        timeCreated: new Date(),\n      })\n      .then((response) => {\n        console.log(response);\n        setSelectedGroupId(response.data._id);\n        props.setCount((prevCount) => prevCount + 1);\n      });\n\n    closeModal();\n    setGroupNameInput(\"\");\n  }\n\n  function renderGroupList(groupList, currentGroupId) {\n    return groupList.map((group) => {\n      return (\n        <ListGroup.Item\n          key={group._id}\n          className={classNames(\"item\", {\n            \"item-selected\": group._id === currentGroupId,\n            \"text-light\": group._id === currentGroupId,\n          })}\n          onClick={() => {\n            setSelectedGroupId(group._id);\n          }}\n        >\n          <span>{group.groupName}</span>\n        </ListGroup.Item>\n      );\n    });\n  }\n\n  return (\n    <div className=\"group-selector mt-5\">\n      <h4 className=\"mb-3 ml-3\">Groups</h4>\n      <ListGroup className=\"mb-2\">\n        {renderGroupList(props.groups, selectedGroupId)}\n      </ListGroup>\n      <Row className=\"justify-content-center\">\n        <Button\n          variant=\"secondary\"\n          size=\"sm\"\n          className=\"mt-3\"\n          onClick={openModal}\n        >\n          Add group\n        </Button>\n      </Row>\n\n      <AddGroupModal\n        isModalOpen={isModalOpen}\n        closeModal={closeModal}\n        onGroupNameInputChange={onGroupNameInputChange}\n        onAddNewGroup={onAddNewGroup}\n      />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Navbar, DropdownButton, Dropdown, Button } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAlignLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport axios from 'axios';\nimport { useHistory } from \"react-router-dom\";\nimport { URL_LOGOUT } from '../config/urls';\n\nfunction MainHeader(props) {\n\n  let history = useHistory();\n\n\n  function toggleSidebar() {\n    props.setIsSidebarOpen(!props.isSidebarOpen);\n  }\n\n  function logoutClick(){\n    axios.get(URL_LOGOUT)\n    .then(()=>{\n      history.push('/');\n    })\n  }\n\n  return (\n    <Navbar bg=\"dark\">\n      <LinkContainer\n        to={props.authed ? \"/app\" : \"/\"}\n        style={{ color: \"white\" }}\n      >\n        <Navbar.Brand>Todoie</Navbar.Brand>\n      </LinkContainer>\n      <Button variant=\"outline-secondary\" onClick={toggleSidebar}>\n        <FontAwesomeIcon icon={faAlignLeft} />\n      </Button>\n      <DropdownButton\n        className=\"ml-auto\"\n        title={props.authed}\n        variant=\"secondary\">      \n          <Dropdown.Item  onClick={logoutClick}>Log out</Dropdown.Item>\n      </DropdownButton>\n    </Navbar>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  authed: state.authed,\n});\n\nexport default connect(mapStateToProps)(MainHeader);\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport \"./Sidebar.css\";\n\nexport default function Sidebar(props) {\n  return (\n    <div\n      bg=\"dark\"\n      className={classNames(\"sidebar\", {\n        \"is-open\": props.isSidebarOpen,\n      })}\n    >\n      {props.children}\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Container } from \"react-bootstrap\";\n\nimport InputBar from \"./InputBar\";\nimport TodoList from \"./TodoList\";\nimport StatusToggle from \"./StatusToggle\";\nimport GroupSelector from \"./GroupSelector/GroupSelector\";\nimport { URL_GETUSERDATA } from \"../config/urls\";\nimport { SelectedGroupProvider } from \"./SelectedGroupContext\";\nimport MainHeader from \"./MainHeader\";\nimport Sidebar from \"./Sidebar/Sidebar\";\n\nexport default function Main(props) {\n  const [userData, setUserData] = useState(null);\n\n  // ${count} is used to\n  const [count, setCount] = useState(0);\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\n\n  useEffect(() => {\n    axios.get(URL_GETUSERDATA).then((response) => {\n      setUserData(response.data);\n    });\n  }, [count]);\n\n  return (\n    <Container fluid className=\"p-0\" style={{ height: \"100vh\" }}>\n      <MainHeader\n        isSidebarOpen={isSidebarOpen}\n        setIsSidebarOpen={setIsSidebarOpen}\n      />\n      <SelectedGroupProvider>\n        <div className=\"container-\">\n          {console.log(userData ? userData.todos : [])}\n          {console.log(count)}\n          <Sidebar isSidebarOpen={isSidebarOpen}>\n            <GroupSelector\n              groups={userData ? userData.groups : []}\n              setCount={setCount}\n            />\n          </Sidebar>\n          <div className=\"middle-lane\">\n            <InputBar setCount={setCount} />\n            <StatusToggle />\n            <TodoList\n              list={userData ? userData.todos : []}\n              setCount={setCount}\n            />\n          </div>\n        </div>\n      </SelectedGroupProvider>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect, Route } from \"react-router-dom\";\n\nclass PrivateRoute extends React.Component {\n  render() {\n    const { component: PrivateComponent, path, ...rest } = this.props;\n    return (\n      <Route path={path} {...rest}>\n        {this.props.authed ? <PrivateComponent /> : <Redirect to=\"/login\" />}\n      </Route>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({ authed: state.authed });\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport Header from \"./Header\";\nimport Login from \"./auth/Login\";\nimport Signup from \"./auth/Signup\";\nimport LandingPage from \"./LandingPage/LandingPage\";\nimport Main from \"./Main\";\nimport \"./App.css\";\nimport { fetchUser } from \"../actions\";\nimport PrivateRoute from \"./PrivateRoute\";\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.fetchUser();\n  }\n\n  render() {\n    return (\n      <div>\n        <Route component={Header} />\n        <Route path=\"/login\" component={Login} />\n        <Route path=\"/signup\" component={Signup} />\n        <Route path=\"/\" exact component={LandingPage} />\n        <PrivateRoute path=\"/app\" component={Main} />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = { fetchUser };\n\nexport default connect(null, mapDispatchToProps)(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { HashRouter } from \"react-router-dom\";\n\nimport thunk from \"redux-thunk\";\nimport reducer from \"./reducers/index\";\nimport { fetchUser } from \"./actions\";\n\nimport App from \"./components/App\";\n\n// async function getAuthState() {\n//   await fetchUser();\n// }\n// /*  why did we use these functions? */\n// getAuthState().then(() => {\n\n// });\n\nReactDOM.render(\n  <Provider store={createStore(reducer, applyMiddleware(thunk))}>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Todoie_logo.6a235456.svg\";"],"sourceRoot":""}