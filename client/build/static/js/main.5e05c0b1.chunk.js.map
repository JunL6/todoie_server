{"version":3,"sources":["img/logo.svg","reducers/todoListReducer.js","reducers/index.js","actions/types.js","reducers/visibilityReducer.js","utils/const.js","reducers/groupSelectedReducer.js","reducers/groupListReducer.js","reducers/authReducer.js","actions/index.js","components/Header.js","components/auth/Login.js","config/urls.js","components/auth/Signup.js","components/LandingPage/LandingPage.js","components/SelectedGroupContext.js","components/InputBar.js","components/TodoList.js","utils/getTodoList.js","components/StatusToggle.js","components/AddGroupModal.js","components/GroupSelector/GroupSelector.js","components/MainHeader.js","components/Sidebar/Sidebar.js","components/Main.js","components/PrivateRoute.js","components/App.js","index.js","img/Todoie_logo.svg"],"names":["module","exports","INITIALSTATE_TODOLIST","id","text","timeCreated","isCompleted","groupId","rootReducer","combineReducers","todoList","action","type","payload","newTodoList","map","todo","visibility","console","log","groupSelected","currentGroupId","groupList","groupName","form","formReducer","authed","state","authUser","username","connect","props","currentURL","history","location","pathname","Navbar","className","expand","to","style","color","Brand","Button","variant","mapDispatchToProps","useState","setUsername","password","setPassword","validated","setValidated","isCredentialCorrect","setIsCredentialCorrect","Container","fluid","Row","src","logo","width","height","Col","Form","noValidate","onSubmit","event","currentTarget","checkValidity","preventDefault","stopPropagation","formProps","axios","post","endpointRoot","then","response","status","JSON","parse","config","data","push","catch","err","error","Group","controlId","Label","Control","placeholder","required","onChange","e","target","value","Feedback","block","display","NavDropdown","Divider","hasUsernameExisted","setHasUsernameExisted","toString","includes","Text","LandingPage","xs","size","SelectedGroupContext","React","createContext","SelectedGroupProvider","selectedGroupId","setSelectedGroupId","Provider","children","InputBar","input","setInput","useContext","todoContent","trim","createdTime","Date","setCount","prevCount","FormControl","fullList","filter","getTodoListFromSelection","list","item","key","_id","onClick","todoId","isToggled","StatusToggle","renderButton","bind","this","switchVisibility","Component","AddGroupModal","Modal","show","isModalOpen","onHide","closeModal","centered","Header","closeButton","Title","Body","InputGroup","onGroupNameInputChange","Footer","onAddNewGroup","GroupSelector","setIsModalOpen","groupNameInput","setGroupNameInput","useEffect","groups","length","ListGroup","group","Item","classNames","useHistory","bg","setIsSidebarOpen","isSidebarOpen","icon","faAlignLeft","DropdownButton","title","Dropdown","get","Sidebar","Main","userData","setUserData","count","todos","PrivateRoute","PrivateComponent","component","path","rest","App","fetchUser","Login","Signup","exact","dispatch","ReactDOM","render","store","createStore","reducer","applyMiddleware","thunk","document","getElementById"],"mappings":"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","file":"static/js/main.5e05c0b1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.183dc3a6.svg\";","import { ADD_TODOITEM, TOGGLE_TODOITEM } from \"../actions/types\";\r\n\r\nconst INITIALSTATE_TODOLIST = [\r\n  {\r\n    id: -1,\r\n    text: \"drink water\",\r\n    timeCreated: 1584135899914,\r\n    isCompleted: false,\r\n    groupId: -1,\r\n  },\r\n  {\r\n    id: -2,\r\n    text: \"wash hands\",\r\n    timeCreated: 1584135992855,\r\n    isCompleted: true,\r\n    groupId: -2,\r\n  },\r\n];\r\n\r\nexport default function (todoList = INITIALSTATE_TODOLIST, action) {\r\n  switch (action.type) {\r\n    case ADD_TODOITEM:\r\n      return [...todoList, action.payload];\r\n    case TOGGLE_TODOITEM:\r\n      let newTodoList = todoList.map(\r\n        (todo) =>\r\n          todo.id === action.payload\r\n            ? { ...todo, isCompleted: !todo.isCompleted }\r\n            : todo\r\n        /**  以上是更好的写法 \r\n        // if (todo.id === action.payload) {\r\n        //   return {...todo, isComplete = !todo.isComplete}\r\n        // } else {\r\n        //   return todo\r\n        // }\r\n         */\r\n      );\r\n      return newTodoList;\r\n    default:\r\n      return todoList;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\nimport todoListReducer from \"./todoListReducer\";\r\nimport visibilityReducer from \"./visibilityReducer\";\r\nimport groupSelectedReducer from \"./groupSelectedReducer\";\r\nimport groupListReducer from \"./groupListReducer\";\r\nimport authReducer from \"./authReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  todoList: todoListReducer,\r\n  visibility: visibilityReducer,\r\n  groupSelected: groupSelectedReducer,\r\n  groupList: groupListReducer,\r\n  form: formReducer,\r\n  authed: authReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","export const ADD_TODOITEM = \"add_todoItem\";\r\nexport const TOGGLE_TODOITEM = \"toggle_todoItem\";\r\nexport const SWITCH_VISIBILITY = \"switch_visibility\";\r\nexport const SELECT_GROUP = \"select_group\";\r\nexport const ADD_GROUP = \"add_group\";\r\nexport const FETCH_USER = \"fetch_user\";\r\nexport const AUTH_USER = \"auth_user\";\r\n","import { STATUS_ALL } from \"../utils/const\";\r\nimport { SWITCH_VISIBILITY } from \"../actions/types\";\r\n\r\nexport default function(visibility = STATUS_ALL, action) {\r\n  switch (action.type) {\r\n    case SWITCH_VISIBILITY:\r\n      console.log(\"clicked toggle: \" + action.payload);\r\n      return action.payload;\r\n    default:\r\n      return visibility;\r\n  }\r\n}\r\n","export const STATUS_ALL = 0;\r\nexport const STATUS_TODO = 1;\r\nexport const STATUS_DONE = 2;\r\n","import { SELECT_GROUP } from \"../actions/types\";\r\n\r\nconst INITIAL_GROUP = -1;\r\n\r\nexport default function(currentGroupId = INITIAL_GROUP, action) {\r\n  switch (action.type) {\r\n    case SELECT_GROUP:\r\n      return action.payload;\r\n    default:\r\n      return currentGroupId;\r\n  }\r\n}\r\n","import { ADD_GROUP } from \"../actions/types\";\r\n\r\nexport default function(\r\n  groupList = [\r\n    { groupName: \"Default Group\", groupId: -1 },\r\n    {\r\n      groupName: \"Group 2\",\r\n      groupId: -2\r\n    }\r\n  ],\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case ADD_GROUP:\r\n      console.log(\"here is being executed\");\r\n      return [...groupList, action.payload];\r\n    default:\r\n      return groupList;\r\n  }\r\n}\r\n","import { FETCH_USER, AUTH_USER } from \"../actions/types\";\r\n\r\nexport default function (state = null, action) {\r\n  switch (action.type) {\r\n    case FETCH_USER:\r\n      return action.payload || false;\r\n    case AUTH_USER:\r\n      return action.payload || false;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import axios from \"axios\";\r\n\r\nimport {\r\n  ADD_TODOITEM,\r\n  TOGGLE_TODOITEM,\r\n  SWITCH_VISIBILITY,\r\n  SELECT_GROUP,\r\n  ADD_GROUP,\r\n  FETCH_USER,\r\n  AUTH_USER,\r\n} from \"./types\";\r\nimport { URL_FETCH_USER } from \"../config/urls\";\r\n\r\nlet nextTodoId = 0;\r\nlet nextGroupId = 1;\r\n\r\nexport function fetchUser() {\r\n  return (dispatch) => {\r\n    axios\r\n      .get(URL_FETCH_USER)\r\n      .then((response) => {\r\n        console.log(response);\r\n        dispatch({ type: FETCH_USER, payload: response.data.username });\r\n      })\r\n      .catch((err) => console.error(err));\r\n  };\r\n}\r\n\r\nexport function authUser(username) {\r\n  return {\r\n    type: AUTH_USER,\r\n    payload: username,\r\n  };\r\n}\r\n\r\nexport const addTodoItem = (text, timestamp, currentGroupId) => {\r\n  return {\r\n    type: ADD_TODOITEM,\r\n    payload: {\r\n      id: nextTodoId++,\r\n      text,\r\n      timeCreated: timestamp,\r\n      isCompleted: false,\r\n      groupId: currentGroupId,\r\n    },\r\n  };\r\n};\r\n\r\nexport const toggleTodoItem = (id) => {\r\n  return {\r\n    type: TOGGLE_TODOITEM,\r\n    payload: id,\r\n  };\r\n};\r\n\r\nexport const switchVisibility = (visibility) => {\r\n  return { type: SWITCH_VISIBILITY, payload: visibility };\r\n};\r\n\r\nexport const selectGroup = (groupId) => {\r\n  return {\r\n    type: SELECT_GROUP,\r\n    payload: groupId,\r\n  };\r\n};\r\n\r\nexport const addGroup = (groupName) => {\r\n  return {\r\n    type: ADD_GROUP,\r\n    payload: {\r\n      groupName,\r\n      groupId: nextGroupId++,\r\n    },\r\n  };\r\n};\r\n\r\n/* authentication related */\r\n","import React from \"react\";\r\nimport { Navbar, Button } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./Header.css\";\r\n\r\nfunction Header(props) {\r\n  const currentURL = props.history.location.pathname;\r\n  if (\r\n    currentURL === \"/login\" ||\r\n    currentURL === \"/signup\" ||\r\n    currentURL === \"/app\"\r\n  )\r\n    return <></>;\r\n  else\r\n    return (\r\n      <Navbar className=\"header transparent\" expand=\"lg\">\r\n        <LinkContainer\r\n          to={props.authed ? \"/app\" : \"/\"}\r\n          style={{ color: \"white\" }}\r\n        >\r\n          <Navbar.Brand className=\"mr-auto\">Todoie</Navbar.Brand>\r\n        </LinkContainer>\r\n        <LinkContainer to=\"/login\">\r\n          <Button variant=\"light\" className=\"mr-2\">\r\n            Log in\r\n          </Button>\r\n        </LinkContainer>\r\n        <LinkContainer to=\"/signup\">\r\n          <Button variant=\"outline-light\" className=\"mr-2\">\r\n            Sign up\r\n          </Button>\r\n        </LinkContainer>\r\n      </Navbar>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  authed: state.authed,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Header);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Form,\r\n  Button,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  NavDropdown,\r\n} from \"react-bootstrap\";\r\n\r\nimport { URL_LOGIN } from \"../../config/urls\";\r\nimport { authUser } from \"../../actions\";\r\nimport \"./auth.css\";\r\nimport logo from \"../../img/Todoie_logo.svg\";\r\n\r\nfunction Login(props) {\r\n  const [username, setUsername] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [validated, setValidated] = useState(false);\r\n  const [isCredentialCorrect, setIsCredentialCorrect] = useState(false);\r\n\r\n  const handleSubmit = (event) => {\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n\r\n    setValidated(true);\r\n    event.preventDefault();\r\n    const formProps = { username, password };\r\n    axios\r\n      .post(URL_LOGIN, formProps)\r\n      .then((response) => {\r\n        console.log(response);\r\n        if (response.status === 200) {\r\n          props.authUser(JSON.parse(response.config.data).username);\r\n          console.log(props.authed);\r\n          props.history.push(\"/app\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n\r\n        setIsCredentialCorrect(true);\r\n        setPassword(null);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth bg-light\">\r\n      <Container fluid>\r\n        <Row className=\"pt-5 justify-content-center align-items-center\">\r\n          <Link to=\"/\" className=\"d-flex align-items-end logo-link\">\r\n            <img src={logo} width=\"30\" height=\"30\" />\r\n            <h3 className=\"d-inline-block m-0 text-dark\">odoie</h3>\r\n          </Link>\r\n        </Row>\r\n        <Row className=\"my-4 justify-content-center\">\r\n          <Col className=\"auth-form-container pt-3 pb-4 px-4 border rounded\">\r\n            <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n              <h3 className=\"text-center text-secondary\">Log in</h3>\r\n              <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Label className=\"font-weight-bold\">Email</Form.Label>\r\n                <Form.Control\r\n                  type=\"email\"\r\n                  placeholder=\"Enter email\"\r\n                  required\r\n                  onChange={(e) => setUsername(e.target.value)}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  Please provide a proper Email.\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formBasicPassword\" className=\"mb-4\">\r\n                <Form.Label className=\"font-weight-bold\">Password</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  placeholder=\"Password\"\r\n                  required\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  Please provide a proper password.\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n\r\n              <Button variant=\"primary\" type=\"submit\" block>\r\n                Log in\r\n              </Button>\r\n              <div\r\n                className=\"text-danger\"\r\n                style={{ display: isCredentialCorrect ? \"block\" : \"none\" }}\r\n              >\r\n                Invalid username or password\r\n              </div>\r\n            </Form>\r\n            <NavDropdown.Divider />\r\n            <div className=\"text-muted\">\r\n              Don't have an account yet? <Link to=\"/signup\">Sign up</Link>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({ authed: state.authed });\r\nconst mapDispatchToProps = { authUser };\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","var endpointRoot = \"https://todoie.herokuapp.com\";\r\n// const endpointRoot = \"\";\r\nexport const URL_FETCH_USER = endpointRoot + \"/api/current_user\";\r\nexport const URL_LOGIN = endpointRoot + \"/api/login\";\r\nexport const URL_LOGOUT = endpointRoot + \"/api/logout\";\r\nexport const URL_SIGNUP = endpointRoot + \"/api/signup\";\r\nexport const URL_GETUSERDATA = endpointRoot + \"/api/getUserData\";\r\nexport const URL_UPDATE_TODO = endpointRoot + \"/api/updateTodo\";\r\nexport const URL_ADD_GROUP = endpointRoot + \"/api/addGroup\";\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Form,\r\n  Button,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  NavDropdown,\r\n} from \"react-bootstrap\";\r\n\r\nimport { URL_SIGNUP } from \"../../config/urls\";\r\nimport { authUser } from \"../../actions\";\r\nimport logo from \"../../img/Todoie_logo.svg\";\r\n\r\nfunction Signup(props) {\r\n  const [username, setUsername] = useState();\r\n  const [password, setPassword] = useState();\r\n  // const [validated, setValidated] = useState(false);\r\n  const [hasUsernameExisted, setHasUsernameExisted] = useState(false);\r\n\r\n  function handleSubmit(event) {\r\n    // const form = event.currentTarget;\r\n    // if (form.checkValidity() === false) {\r\n    //   event.preventDefault();\r\n    //   event.stopPropagation();\r\n    // }\r\n\r\n    // setValidated(true);\r\n\r\n    event.preventDefault();\r\n\r\n    const formProps = { username, password };\r\n    axios\r\n      .post(URL_SIGNUP, formProps)\r\n      .then((response) => {\r\n        console.log(response);\r\n        if (response.status === 200) {\r\n          props.authUser(formProps.username);\r\n          props.history.push(\"/app\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n        if (err.toString().includes(\"409\")) {\r\n          setHasUsernameExisted(true);\r\n          setPassword(null);\r\n        }\r\n      });\r\n  }\r\n\r\n  function onUsernameInputChange(e) {\r\n    setUsername(e.target.value);\r\n  }\r\n\r\n  function onPasswordInputChange(e) {\r\n    setPassword(e.target.value);\r\n  }\r\n\r\n  return (\r\n    // <div>\r\n    //   <Link to=\"/\">Todoie</Link>\r\n    //   <div>Sign up</div>\r\n    //   <form onSubmit={handleSubmit(this.onFormSubmit)}>\r\n    //     <fieldset>\r\n    //       <label>Email:</label>\r\n    //       <Field name=\"username\" component=\"input\" type=\"text\" />\r\n    //     </fieldset>\r\n    //     <fieldset>\r\n    //       <label>Password: </label>\r\n    //       <Field name=\"password\" component=\"input\" type=\"password\" />\r\n    //     </fieldset>\r\n    //     <button>Sign up</button>\r\n    //   </form>\r\n    //   <div>todo: error message</div>\r\n    // </div>\r\n    <div className=\"auth bg-light\">\r\n      <Container fluid>\r\n        <Row className=\"pt-5 justify-content-center align-items-center\">\r\n          <Link to=\"/\" className=\"d-flex align-items-end logo-link\">\r\n            <img src={logo} width=\"30\" height=\"30\" />\r\n            <h3 className=\"d-inline-block m-0 text-dark\">odoie</h3>\r\n          </Link>\r\n        </Row>\r\n        <Row className=\"my-4 justify-content-center\">\r\n          <Col className=\"auth-form-container pt-3 pb-4 px-4 border rounded\">\r\n            <Form\r\n              //  validated={validated}\r\n              onSubmit={handleSubmit}\r\n            >\r\n              <h3 className=\"text-center text-secondary\">Sign up</h3>\r\n              <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Label className=\"font-weight-bold\">Email</Form.Label>\r\n                <Form.Control\r\n                  type=\"email\"\r\n                  placeholder=\"Enter email\"\r\n                  required\r\n                  onChange={onUsernameInputChange}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  Please provide a proper Email.\r\n                </Form.Control.Feedback>\r\n                <Form.Text className=\"text-muted\">\r\n                  We'll never share your email with anyone else.\r\n                </Form.Text>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formBasicPassword\" className=\"mb-4\">\r\n                <Form.Label className=\"font-weight-bold\">Password</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  placeholder=\"Password\"\r\n                  required\r\n                  onChange={onPasswordInputChange}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  Please provide a proper password.\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n\r\n              <Button variant=\"primary\" type=\"submit\" block>\r\n                Sign up\r\n              </Button>\r\n              <div\r\n                className=\"text-danger\"\r\n                style={{ display: hasUsernameExisted ? \"block\" : \"none\" }}\r\n              >\r\n                Email has been registered.\r\n              </div>\r\n            </Form>\r\n            <NavDropdown.Divider />\r\n            <div className=\"text-muted\">\r\n              Already have an account? <Link to=\"/login\">Log in</Link>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = { authUser };\r\nexport default connect(null, mapDispatchToProps)(Signup);\r\n\r\n// export default reduxForm({ form: \"signup\" })(connectedComponent);\r\n","import React from \"react\";\r\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport logo from \"../../img/logo.svg\";\r\nimport \"./LandingPage.css\";\r\n\r\nexport default function LandingPage(props) {\r\n  return (\r\n    <Container fluid className=\"landing-page\">\r\n      <div className=\"layer\"> </div>\r\n      <div className=\"content d-flex flex-column justify-content-center\">\r\n        <Row className=\"justify-content-center py-3 m-0\">\r\n          {/* <Col xs=\"auto\"> */}\r\n          {/* <svg\r\n            className=\"logo\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 278 278\"\r\n          >\r\n            <path d=\"M254.8 0h-98.5 -33 -99.5C15.5 0 8.5 6.7 8.5 15v33c0 8.3 6.7 15 15 15s15-6.7 15-15V30h69v218H89.8c-8.3 0-15 6.7-15 15s6.7 15 15 15h99c8.3 0 15-6.7 15-15s-6.7-15-15-15H170.5V30h69v18c0 8.3 6.7 15 15 15s15-6.7 15-15V15C269.5 6.7 263.1 0 254.8 0z\" />\r\n          </svg>\r\n          <h2>odoie</h2> */}\r\n          {/* <img src={logo} width=\"360\" height=\"400\" /> */}\r\n          {/* </Col> */}\r\n          <h1 className=\"text-light\">Todoie</h1>\r\n        </Row>\r\n        <Row className=\"justify-content-center m-0\">\r\n          <h4 className=\"text-light\">A simple todo list app.</h4>\r\n        </Row>\r\n        <Row className=\"justify-content-center pt-3 m-0\">\r\n          <Col xs=\"auto\">\r\n            <LinkContainer to=\"/signup\">\r\n              <Button variant=\"info\" size=\"lg\">\r\n                Sign up for free now!\r\n              </Button>\r\n            </LinkContainer>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nexport const SelectedGroupContext = React.createContext();\r\n\r\nexport const SelectedGroupProvider = (props) => {\r\n  const [selectedGroupId, setSelectedGroupId] = useState();\r\n\r\n  return (\r\n    <SelectedGroupContext.Provider\r\n      value={[selectedGroupId, setSelectedGroupId]}\r\n    >\r\n      {props.children}\r\n    </SelectedGroupContext.Provider>\r\n  );\r\n};\r\n","import React, { useState, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { InputGroup, FormControl, Button, Form, Row } from \"react-bootstrap\";\r\nimport { SelectedGroupContext } from \"./SelectedGroupContext\";\r\n\r\nfunction InputBar(props) {\r\n  // constructor(props) {\r\n  //   super(props);\r\n  //   this.state = { text: \"\" };\r\n\r\n  //   this.onInputChange = this.onInputChange.bind(this);\r\n  //   this.onSubmit = this.onSubmit.bind(this);\r\n  // }\r\n\r\n  const [input, setInput] = useState(\"\");\r\n  const [selectedGroupId, setSelectedGroupId] = useContext(\r\n    SelectedGroupContext\r\n  );\r\n\r\n  function onInputChange(e) {\r\n    setInput(e.target.value);\r\n  }\r\n\r\n  function onSubmit(e) {\r\n    e.preventDefault();\r\n    let text = input.trim();\r\n    if (!text) {\r\n      return;\r\n    }\r\n\r\n    // api part\r\n    insertTodo(text);\r\n\r\n    // empty input bar text\r\n    setInput(\"\");\r\n    console.log(\"add to do: \" + text);\r\n  }\r\n\r\n  function insertTodo(todoContent) {\r\n    axios\r\n      .post(\"/api/insertTodo\", {\r\n        groupId: selectedGroupId,\r\n        todoContent,\r\n        createdTime: new Date(),\r\n      })\r\n      .then(() => {\r\n        props.setCount((prevCount) => prevCount + 1);\r\n      });\r\n  }\r\n\r\n  return (\r\n    // <form onSubmit={onSubmit}>\r\n    //   <input\r\n    //     className=\"\"\r\n    //     type=\"text\"\r\n    //     placeholder=\"Enter text\"\r\n    //     onChange={onInputChange}\r\n    //     value={input}\r\n    //   />\r\n    //   <button className=\"btn btn-primary\" type=\"submit\">\r\n    //     Add\r\n    //   </button>\r\n    // </form>\r\n    <Form onSubmit={onSubmit} className=\"mb-3\">\r\n      <Row>\r\n        <FormControl\r\n          type=\"text\"\r\n          value={input}\r\n          onChange={onInputChange}\r\n          style={{ width: \"300px\" }}\r\n          className=\"mr-2\"\r\n        />\r\n\r\n        <Button variant=\"info\" type=\"submit\">\r\n          Add Todo\r\n        </Button>\r\n      </Row>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default InputBar;\r\n","import React, { useContext } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { Nav, Card, Button } from \"react-bootstrap\";\r\n// import { toggleTodoItem } from \"../actions\";\r\nimport { SelectedGroupContext } from \"./SelectedGroupContext\";\r\nimport { URL_UPDATE_TODO } from \"../config/urls\";\r\nimport getTodoListFromSelection from \"../utils/getTodoList\";\r\n\r\nfunction TodoList(props) {\r\n  const [selectedGroupId, setSelectedGroupId] = useContext(\r\n    SelectedGroupContext\r\n  );\r\n\r\n  function OnToggleTodoItem(todoId) {\r\n    axios\r\n      .post(URL_UPDATE_TODO, {\r\n        todoId,\r\n        isToggled: true,\r\n      })\r\n      .then((response) => {\r\n        props.setCount((prevCount) => prevCount + 1);\r\n      });\r\n  }\r\n\r\n  function renderList(list) {\r\n    return list.map((item) => (\r\n      <li\r\n        key={item._id}\r\n        className={\r\n          item.isCompleted\r\n            ? \"todo-list_li--completed\"\r\n            : \"todo-list_li--incomplete\"\r\n        }\r\n        onClick={() => {\r\n          OnToggleTodoItem(item._id);\r\n        }}\r\n      >\r\n        {item.todoContent}\r\n      </li>\r\n    ));\r\n  }\r\n\r\n  return (\r\n    <div className=\"todo-list\">\r\n      <ul>\r\n        {renderList(\r\n          getTodoListFromSelection(\r\n            // this.props.todoList,\r\n            props.list,\r\n            props.visibility,\r\n            selectedGroupId\r\n          )\r\n        )}\r\n      </ul>\r\n\r\n      {/* <Card>\r\n        <Card.Header>\r\n          <Nav variant=\"pills\" defaultActiveKey=\"#first\">\r\n            <Nav.Item>\r\n              <Nav.Link href=\"#first\">Active</Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <Nav.Link href=\"#link\">Link</Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <Nav.Link href=\"#disabled\" disabled>\r\n                Disabled\r\n              </Nav.Link>\r\n            </Nav.Item>\r\n          </Nav>\r\n        </Card.Header>\r\n        <Card.Body className=\"p-0\">\r\n          <ul>\r\n            {renderList(\r\n              getTodoListFromSelection(\r\n                // this.props.todoList,\r\n                props.list,\r\n                props.visibility,\r\n                selectedGroupId\r\n              )\r\n            )}\r\n          </ul>\r\n        </Card.Body>\r\n      </Card> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    visibility: state.visibility,\r\n  };\r\n}\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(TodoList);\r\nexport default connect(mapStateToProps)(TodoList);\r\n","import { STATUS_ALL, STATUS_TODO, STATUS_DONE } from \"./const\";\r\n\r\nexport default function getTodoListFromSelection(\r\n  fullList,\r\n  visibility,\r\n  currentGroupId\r\n) {\r\n  switch (visibility) {\r\n    case STATUS_ALL:\r\n      return fullList.filter((todo) => todo.groupId === currentGroupId);\r\n    case STATUS_TODO:\r\n      return fullList.filter(\r\n        (todo) => todo.groupId === currentGroupId && todo.isCompleted === false\r\n      );\r\n    case STATUS_DONE:\r\n      return fullList.filter(\r\n        (todo) => todo.groupId === currentGroupId && todo.isCompleted === true\r\n      );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { switchVisibility } from \"../actions\";\r\nimport { STATUS_ALL, STATUS_TODO, STATUS_DONE } from \"../utils/const\";\r\n\r\nclass StatusToggle extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.renderButton = this.renderButton.bind(this);\r\n  }\r\n\r\n  renderButton(text, status) {\r\n    return (\r\n      <button\r\n        className={\r\n          this.props.visibility === status\r\n            ? \"status-toggle_button--selected\"\r\n            : \"\"\r\n        }\r\n        onClick={() => this.props.switchVisibility(status)}\r\n      >\r\n        {text}\r\n      </button>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"status-toggle\">\r\n        {this.renderButton(\"All\", STATUS_ALL)}\r\n        {this.renderButton(\"Todo\", STATUS_TODO)}\r\n        {this.renderButton(\"Done\", STATUS_DONE)}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    visibility: state.visibility,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, { switchVisibility })(StatusToggle);\r\n","import React from \"react\";\r\nimport { Modal, Button, InputGroup, FormControl } from \"react-bootstrap\";\r\n\r\nexport default function AddGroupModal(props) {\r\n  return (\r\n    <Modal show={props.isModalOpen} onHide={props.closeModal} centered>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>New group</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <InputGroup>\r\n          <FormControl\r\n            placeholder=\"New group name\"\r\n            onChange={props.onGroupNameInputChange}\r\n          />\r\n        </InputGroup>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={props.closeModal}>\r\n          Close\r\n        </Button>\r\n        <Button variant=\"primary\" onClick={props.onAddNewGroup}>\r\n          Add\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { ListGroup, Button, Row, Modal } from \"react-bootstrap\";\r\nimport classNames from \"classnames\";\r\n\r\n// import { selectGroup, addGroup } from \"../actions\";\r\nimport { SelectedGroupContext } from \"../SelectedGroupContext\";\r\nimport AddGroupModal from \"../AddGroupModal\";\r\nimport { URL_ADD_GROUP } from \"../../config/urls\";\r\nimport \"./GroupSelector.css\";\r\n// import Modal from \"react-modal\";\r\n// Modal.setAppElement(\"#root\");\r\n\r\nexport default function GroupSelector(props) {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [groupNameInput, setGroupNameInput] = useState(\"\");\r\n  const [selectedGroupId, setSelectedGroupId] = useContext(\r\n    SelectedGroupContext\r\n  );\r\n\r\n  /* */\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  /* I am not sure if I should move this useEffect logic to Main.js */\r\n  useEffect(() => {\r\n    if (!selectedGroupId && props.groups.length > 0) {\r\n      setSelectedGroupId(props.groups[0]._id);\r\n    }\r\n  }, [selectedGroupId, props.groups]);\r\n\r\n  function openModal() {\r\n    setIsModalOpen(true);\r\n  }\r\n\r\n  function closeModal() {\r\n    setIsModalOpen(false);\r\n  }\r\n\r\n  function onGroupNameInputChange(e) {\r\n    if (e.target.value) {\r\n      const text = e.target.value.trim();\r\n      setGroupNameInput(text);\r\n    }\r\n  }\r\n\r\n  function onAddNewGroup(e) {\r\n    e.preventDefault();\r\n    axios\r\n      .post(URL_ADD_GROUP, {\r\n        groupName: groupNameInput,\r\n        timeCreated: new Date(),\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n        setSelectedGroupId(response.data._id);\r\n        props.setCount((prevCount) => prevCount + 1);\r\n      });\r\n\r\n    closeModal();\r\n    setGroupNameInput(\"\");\r\n    // this.setState({ isModalOpen: false, groupNameInput: \"\" });\r\n  }\r\n\r\n  function renderGroupList(groupList, currentGroupId) {\r\n    return groupList.map((group) => {\r\n      return (\r\n        <ListGroup.Item\r\n          key={group._id}\r\n          className={classNames(\"item\", {\r\n            \"item-selected\": group._id === currentGroupId,\r\n            \"text-primary\": group._id === currentGroupId,\r\n          })}\r\n          onClick={() => {\r\n            setSelectedGroupId(group._id);\r\n          }}\r\n        >\r\n          <span>{group.groupName}</span>\r\n        </ListGroup.Item>\r\n      );\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"group-selector mt-5\">\r\n      <h4 className=\"mb-3 ml-3\">Groups</h4>\r\n      <ListGroup className=\"mb-2\">\r\n        {renderGroupList(props.groups, selectedGroupId)}\r\n      </ListGroup>\r\n      <Row className=\"justify-content-center\">\r\n        <Button\r\n          variant=\"secondary\"\r\n          size=\"sm\"\r\n          className=\"mt-3\"\r\n          onClick={openModal}\r\n        >\r\n          Add group\r\n        </Button>\r\n      </Row>\r\n\r\n      <AddGroupModal\r\n        isModalOpen={isModalOpen}\r\n        closeModal={closeModal}\r\n        onGroupNameInputChange={onGroupNameInputChange}\r\n        onAddNewGroup={onAddNewGroup}\r\n      />\r\n\r\n      {/* <Modal\r\n        isOpen={isModalOpen}\r\n        onRequestClose={closeModal}\r\n        overlayClassName=\"modal-overlay\"\r\n        className=\"modal-content\"\r\n      >\r\n        <div>\r\n          <header>\r\n            <h3>Add Group</h3>\r\n            <button onClick={closeModal}>x</button>\r\n          </header>\r\n          <form onSubmit={onAddNewGroup}>\r\n            <label>Group Name: </label>\r\n            <input onChange={onGroupNameInputChange} type=\"text\"></input>\r\n          </form>\r\n          <footer>\r\n            <Button variant=\"light\" onClick={onAddNewGroup}>\r\n              Add\r\n            </Button>\r\n          </footer>\r\n        </div>\r\n      </Modal> */}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Navbar, DropdownButton, Dropdown, Button } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faAlignLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport axios from 'axios';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { URL_LOGOUT } from '../config/urls';\r\n\r\nfunction MainHeader(props) {\r\n\r\n  let history = useHistory();\r\n\r\n\r\n  function toggleSidebar() {\r\n    props.setIsSidebarOpen(!props.isSidebarOpen);\r\n  }\r\n\r\n  function logoutClick(){\r\n    axios.get(URL_LOGOUT)\r\n    .then(()=>{\r\n      history.push('/');\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Navbar bg=\"dark\">\r\n      <LinkContainer\r\n        to={props.authed ? \"/app\" : \"/\"}\r\n        style={{ color: \"white\" }}\r\n      >\r\n        <Navbar.Brand>Todoie</Navbar.Brand>\r\n      </LinkContainer>\r\n      <Button variant=\"outline-secondary\" onClick={toggleSidebar}>\r\n        <FontAwesomeIcon icon={faAlignLeft} />\r\n      </Button>\r\n      <DropdownButton\r\n        className=\"ml-auto\"\r\n        title={props.authed}\r\n        variant=\"secondary\">      \r\n          <Dropdown.Item  onClick={logoutClick}>Log out</Dropdown.Item>\r\n      </DropdownButton>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  authed: state.authed,\r\n});\r\n\r\nexport default connect(mapStateToProps)(MainHeader);\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport \"./Sidebar.css\";\r\n\r\nexport default function Sidebar(props) {\r\n  return (\r\n    <div\r\n      bg=\"dark\"\r\n      className={classNames(\"sidebar\", {\r\n        \"is-open\": props.isSidebarOpen,\r\n      })}\r\n    >\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nimport InputBar from \"./InputBar\";\r\nimport TodoList from \"./TodoList\";\r\nimport StatusToggle from \"./StatusToggle\";\r\nimport GroupSelector from \"./GroupSelector/GroupSelector\";\r\nimport { URL_GETUSERDATA } from \"../config/urls\";\r\nimport { SelectedGroupProvider } from \"./SelectedGroupContext\";\r\nimport MainHeader from \"./MainHeader\";\r\nimport Sidebar from \"./Sidebar/Sidebar\";\r\n\r\nexport default function Main(props) {\r\n  const [userData, setUserData] = useState(null);\r\n  const [count, setCount] = useState(0);\r\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\r\n\r\n  useEffect(() => {\r\n    axios.get(URL_GETUSERDATA).then((response) => {\r\n      setUserData(response.data);\r\n    });\r\n  }, [count]);\r\n\r\n  return (\r\n    <Container fluid className=\"p-0\" style={{ height: \"100vh\" }}>\r\n      <MainHeader\r\n        isSidebarOpen={isSidebarOpen}\r\n        setIsSidebarOpen={setIsSidebarOpen}\r\n      />\r\n      <SelectedGroupProvider>\r\n        <div className=\"container-\">\r\n          {console.log(userData ? userData.todos : [])}\r\n          {console.log(count)}\r\n          <Sidebar isSidebarOpen={isSidebarOpen}>\r\n            <GroupSelector\r\n              groups={userData ? userData.groups : []}\r\n              setCount={setCount}\r\n            />\r\n          </Sidebar>\r\n          <div className=\"middle-lane\">\r\n            <InputBar setCount={setCount} />\r\n            <StatusToggle />\r\n            <TodoList\r\n              list={userData ? userData.todos : []}\r\n              setCount={setCount}\r\n            />\r\n          </div>\r\n        </div>\r\n      </SelectedGroupProvider>\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\n\r\nclass PrivateRoute extends React.Component {\r\n  render() {\r\n    const { component: PrivateComponent, path, ...rest } = this.props;\r\n    return (\r\n      <Route path={path} {...rest}>\r\n        {this.props.authed ? <PrivateComponent /> : <Redirect to=\"/login\" />}\r\n      </Route>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({ authed: state.authed });\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Header from \"./Header\";\r\nimport Login from \"./auth/Login\";\r\nimport Signup from \"./auth/Signup\";\r\nimport LandingPage from \"./LandingPage/LandingPage\";\r\nimport Main from \"./Main\";\r\nimport \"./App.css\";\r\nimport { fetchUser } from \"../actions\";\r\nimport PrivateRoute from \"./PrivateRoute\";\r\n\r\nclass App extends React.Component {\r\n  componentDidMount() {\r\n    this.props.fetchUser();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Route component={Header} />\r\n        <Route path=\"/login\" component={Login} />\r\n        <Route path=\"/signup\" component={Signup} />\r\n        <Route path=\"/\" exact component={LandingPage} />\r\n        <PrivateRoute path=\"/app\" component={Main} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = { fetchUser };\r\n\r\nexport default connect(null, mapDispatchToProps)(App);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport { HashRouter } from \"react-router-dom\";\r\n\r\nimport thunk from \"redux-thunk\";\r\nimport reducer from \"./reducers/index\";\r\nimport { fetchUser } from \"./actions\";\r\n\r\nimport App from \"./components/App\";\r\n\r\n// async function getAuthState() {\r\n//   await fetchUser();\r\n// }\r\n// /*  why did we use these functions? */\r\n// getAuthState().then(() => {\r\n\r\n// });\r\n\r\nReactDOM.render(\r\n  <Provider store={createStore(reducer, applyMiddleware(thunk))}>\r\n    <HashRouter>\r\n      <App />\r\n    </HashRouter>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n// serviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/Todoie_logo.6a235456.svg\";"],"sourceRoot":""}